// 
// Header Bar
// ==============================

// BASE
// ------------------------------

.Headerbar {
	margin: 0;
	position: relative;
	z-index: 3;
	
	// workaround for headerbar issue in KitKat Chrome,
	// see https://github.com/JedWatson/touchstonejs/issues/11
	-webkit-transform: translateZ(0);
	transform: translateZ(0);

	&.default {
		.retina-1px-border-bottom( rgba(0,0,0,0.3) );
		background-color: @headerbar-bg;
		color: @headerbar-color;
	}

	// fixed option
	&.fixed {
		position: fixed;
		width: 100%;
	}
}

// offset fixed headerbar (apply to the adjacent sibling)
.offset-fixed-headerbar {
	padding-top: @headerbar-height;

	.is-native-app & {
		padding-top: @headerbar-height + @statusbar-height;
	}
}

// variants

.Headerbar.transparent,
.Headerbar.green,
.Headerbar.blue,
.Headerbar.primary,
.Headerbar.light-blue,
.Headerbar.yellow,
.Headerbar.orange,
.Headerbar.red,
.Headerbar.pink,
.Headerbar.purple {
	color: @headerbar-inverted-color;
	
	// hide the shadow
	&:after {
		display: none;
	}
	
	.Headerbar-button {
		color: @headerbar-inverted-button-color;

		&.disabled,
		&[disabled] {
			color: @headerbar-inverted-button-color-disabled;
		}
	}

	// loading button
	.loading-button-icon {
		&:before { border-color: @headerbar-inverted-color; }
		&:after { border-top-color: @headerbar-inverted-color; }
	}
}
.Headerbar.green { background-color: @green; }
.Headerbar.blue  { background-color: @blue; }
.Headerbar.primary { background-color: @app-primary; }
.Headerbar.light-blue { background-color: @light-blue; }
.Headerbar.yellow { background-color: @yellow; }
.Headerbar.orange { background-color: @orange; }
.Headerbar.red { background-color: @red; }
.Headerbar.pink { background-color: @pink; }
.Headerbar.purple { background-color: @purple; }
.Headerbar.transparent { background: none; }

// warning is a special case - it has dark text

.Headerbar.yellow {
	color: @headerbar-color;
	
	.Headerbar-button {
		color: fade(@text-color, 80%);

		&.disabled,
		&[disabled] {
			color: fade(@text-color, 40%);
		}
	}
}

// BUTTONS
// ------------------------------

.Headerbar-button {
	background: none transparent;
	border: 0 none;
	color: @headerbar-button-color;
	cursor: pointer;
	left: 0;
	line-height: @headerbar-height;
	height: @headerbar-height;
	min-width: @headerbar-height;
	padding-left: @gutter-base;
	padding-right: @gutter-base;
	position: absolute;
	text-align: center;
	text-decoration: none;
	-webkit-appearance: none;
	z-index: 2;

	// highlight primary buttons
	&.is-primary {
		font-weight: @font-weight-bold;
	}

	// align button right
	&.right {
		left: auto;
		right: 0;
	}

	// just for dev
	&:hover {
		color: lighten(@headerbar-button-color, 5%);
	}
	
	// darken button on tap
	&:active,
	&:focus,
	&.Tappable-active {
		color: darken(@headerbar-button-color, 10%);
		outline: none;
		-webkit-appearance: none;
	}

	// alert users to disabled state
	&.disabled,
	&[disabled] {
		color: @headerbar-button-color-disabled;
		pointer-events: none;
	}

	// position the icon
	&:before {
		font-size: @ionicons-size-large;
		margin-right: @gutter-base / 2;
		position: relative;
		top: 3px; // FIXME: magic numbers are bad
	}
}

// LABEL
// ------------------------------

.Headerbar-label {
	.text-overflow();
	font-weight: @font-weight-bold;
	line-height: @headerbar-height;
	height: @headerbar-height;
	min-width: @headerbar-height;
	padding-left: @gutter-base;
	padding-right: @gutter-base;
	text-align: center;
}

// Toggle
// ------------------------------

.Headerbar > .Toggle {
	margin: @headerbar-field-gutter;
}
.Subheader > .Toggle {
	margin: 0 @headerbar-field-gutter;
}

// FORM
// ------------------------------

.Headerbar-form {
	.display-flex();
	line-height: 1;
	padding: @headerbar-field-gutter 0;
	
	// bring closer to labelled headerbar
	.Headerbar + & {
		padding-top: 0;
	}
}
.Headerbar-form-field {
	padding: 0 @headerbar-field-gutter;
	position: relative;

	// if there's only one component it will fill all available space,
	// otherwise pick one component to stretch with "is-primary"
	&:only-child,
	&.is-primary {
		.flex-grow(1);
	}

	// flex ignores margin collapse so this is the best solution
	& + & {
		padding-left: 0;
	}
}
.Headerbar-form-input {
	.placeholder( @gray-light );
	.transition( background-color 100ms linear );
	background: rgba(0, 0, 0, 0.06);
	border: 0;
	border-radius: 5px;
	color: inherit;
	font-size: @font-size-small;
	height: @headerbar-field-height;
	line-height: normal;
	margin: 0;
	outline: none;
	padding: @headerbar-field-gutter (@headerbar-field-gutter * 2);
	width: 100%;
	-webkit-appearance: none;

	&:active {
		background: rgba(0, 0, 0, 0.12);
	}
}

// icon

/* helper mixin */
.align-headerbar-form-icon(@color, @left, @right) {
	.display-flex();
	.align-items(center);
	color: @color;
	font-size: @ionicons-size-base;
	height: 100%;
	padding: 0 @headerbar-field-gutter;
	position: absolute;
	left: @left;
	right: @right;
	top: 0;
}

/* actual styles */
.Headerbar-form-icon {

	.Headerbar-form-input {
		padding-left: @ionicons-size-base + @headerbar-field-gutter;
	}
	
	&:before {
		.align-headerbar-form-icon(@gray-light, @headerbar-field-gutter, auto);
		pointer-events: none;
	}
}

.Headerbar-form-clear {
	.align-headerbar-form-icon(@gray-light, auto, @headerbar-field-gutter);

	&.Tappable-active {
		color: @gray-light;
	}
}

