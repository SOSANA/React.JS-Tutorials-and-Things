// 
// Buttons
// ==============================

button {
	padding: 0;
}

// Base
// ------------------------------

.btn {
	.box-shadow( inset 0 -1px 0 rgba(0,0,0,0.1) );
	border-radius: @border-radius-base;
	border: 0 none;
	display: inline-block;
	font-weight: @font-weight-bold;
	padding: @padding-base-vertical @padding-base-horizontal;
	position: relative;
	outline: none;
	text-align: center;
	text-decoration: none;
	-webkit-appearance: none;
}

// Link buttons
// ------------------------------

.btn-link {
	.box-shadow( none );
	border-color: transparent;
	border-radius: 0;
	color: @link-color;
	cursor: pointer;
	// font-weight: normal;

	&,
	&:active,
	&[disabled],
	fieldset[disabled] & {
		background-color: transparent;
	}
	&:hover,
	&:active,
	&:focus {
		color: @link-hover-color;
		background-color: transparent;
	}
}

// Variants
// ------------------------------

// default button

.btn-default {
	#gradient .vertical(#eee, #ddd);
	color: @text-color;

	&:hover,
	&:focus {
		#gradient .vertical(#f6f6f6, #e6e6e6);
		color: @text-color;
	}

	&:active,
	&.active {
		background: #ddd;
		box-shadow: inset 0 1px 2px rgba(0,0,0,.125);
	}
}

// colour variants

// .btn-default {
// 	.button-variant(#333, #e6e6e6, #ccc);
// }
.btn-primary {
	.button-variant(white, @app-primary);
}
.btn-success {
	.button-variant(white, @app-success);
}
.btn-info {
	.button-variant(white, @app-info);
}
.btn-warning {
	.button-variant(white, @app-warning);
}
.btn-danger {
	.button-variant(white, @app-danger);
}

.btn-block {
	display: block;
	width: 100%;
}

// Panel Buttons
// ------------------------------

.panel-button {
	// de-chrome
	border: 0 none;
	font-weight: normal;
	line-height: 1;
	outline: none;
	text-decoration: none;
	-webkit-appearance: none;

	// re-chrome
	.retina-1px-border-top-and-bottom( rgba(0,0,0,0.17) );
	// .text-overflow();
	background-color: white;
	border: none;
	color: @text-color;
	display: block;
	margin-bottom: @gutter-large;
	height: @item-height;
	line-height: @item-height;
	padding: 0 @padding-base-horizontal;
	position: relative;
	text-align: center;
	width: 100%;

	// variants
	&.muted,
	&.muted:hover,
	&.muted:focus { color: @gray; }
	&.default,
	&.default:hover,
	&.default:focus { color: @text-color; }
	&.primary,
	&.primary:hover,
	&.primary:focus { color: @app-primary; font-weight: @font-weight-bold; }
	&.info,
	&.info:hover,
	&.info:focus { color: @app-info; }
	&.success,
	&.success:hover,
	&.success:focus { color: @app-success; }
	&.warning,
	&.warning:hover,
	&.warning:focus { color: @app-warning; }
	&.danger,
	&.danger:hover,
	&.danger:focus { color: @app-danger; }

	// stack panel buttons closer to one another when in a row
	& + & {
		margin-top: -(@gutter-large / 2);
	}

	// add active state
	&.Tappable-active {
		background-color: @item-tap-bg;
	}

	// add disabled state
	&.disabled,
	&[disabled] {
		pointer-events: none;
		opacity: .5;
	}

	// icons in buttons
	& > .ion-sm,
	& > .ion-md,
	& > .ion-lg {
		.inline-align();
	}

}

// stacking options
.panel-button--first {
	margin-top: @gutter-large;
}
.panel-button-bunched {
	margin-bottom: @gutter-large / 2;
}

// stack buttons horizontally

.panel-button-group {
	.display-flex();
	margin-bottom: @gutter-large;

	 > .panel-button {
	 	border-left: 1px solid darken(@body-bg, 10%);
	 	margin: 0;

	 	&:first-child {
	 		border-left: none;
	 	}
	 }
}

// Loading Buttons
// ------------------------------

// setup transistions
.loading-button-icon,
.loading-button-text {
	.transition( opacity 400ms );
}

// center the loading icon
.loading-button-icon-wrapper {
	.display-flex();
	.align-items(center);
	height: 100%;
	top: 0;
}

// create and hide the loading icon
.loading-button-icon {
	.loader(@font-size-huge, 500ms, @app-primary);
	.transition-delay( 200ms );
	// opacity: 0;

	// variants
	.loading-button.default &  { .loader(@font-size-huge, 500ms, @text-color); }
	.loading-button.muted &    { .loader(@font-size-huge, 500ms, @app-muted); }
	.loading-button.primary &  { .loader(@font-size-huge, 500ms, @app-primary); }
	.loading-button.info &     { .loader(@font-size-huge, 500ms, @app-info); }
	.loading-button.success &  { .loader(@font-size-huge, 500ms, @app-success); }
	.loading-button.warning &  { .loader(@font-size-huge, 500ms, @app-warning); }
	.loading-button.danger &   { .loader(@font-size-huge, 500ms, @app-danger); }
	.loading-button.inverted & { .loader(@font-size-huge, 500ms, white); }
}

// change state
.loading-button.is-loading {
	pointer-events: none;
	
	.loading-button-icon { opacity: 1; }
	.loading-button-text { opacity: 0; }
}

// Action Buttons
// ------------------------------

.action-buttons {
	.display-flex();
	.flex-flow();

	& + & {
		border-top: 1px solid darken(@body-bg, 10%);
	}
}
.action-button-cell {
	.flex-grow(1);
	border-left: 1px solid darken(@body-bg, 10%);
	text-align: center;

	&:first-child {
		border-left: none;
	}
}
.action-button {
	.display-flex();
	.align-items(center);
	.flex-direction(column);
	.justify-content(center);
	background: none transparent;
	border: 0 none;
	cursor: pointer; // for piece of mind when developing on the desktop
	min-height: 70px;
	padding: 5px;
	position: relative;
	text-align: center;
	width: 100%;
	-webkit-appearance: none;

	
	// disabled state

	&.disabled,
	&[disabled] {
		opacity: .5;
		pointer-events: none;
	}

	
	// inactive state - used when items are selectable

	&.inactive {
		&:before,
		> .action-button-label {
			opacity: .4;
		}
	}

	
	// tapped state

	&.Tappable-active {
		background-color: @gray-lighter;
	}

	
	// icon

	&:before {
		color: @app-primary;
		display: inline-block;
		font-size: @ionicons-size-huge;
		height: @ionicons-size-huge;
		line-height: 1;
	}
}

// label
.action-button-label {
	.text-overflow();
	font-size: @font-size-small;
	font-weight: @font-weight-bold;
}

// variants
.action-buttons.special {
	box-shadow: 0 0 0 1px mix(@text-color, @app-warning, 10%);

	.action-button-cell {
		border-color: mix(@text-color, @app-warning, 15%);
	}
	.action-button {
		background-color: @app-warning;
	}
	.action-button-icon {
		color: @text-color;
	}
}

// Scan Button
// ------------------------------

@scan-button-height:    60px;
@scan-button-icon-size: @scan-button-height + 10;

.scan-button {
	.size(100%,@scan-button-height);
	background-color: @app-primary;
	border: 0 none;
	color: white;
	display: block;
	font-weight: @font-weight-bold;
	position: relative;
	outline: none;
	text-align: center;
	text-decoration: none;
	-webkit-appearance: none;

	// tapped/active state

	&.loading,
	&.Tappable-active {
		background-color: darken(@app-primary, 10%);

		.scan-button-icon {
			background-color: lighten(@app-primary, 40%);
			box-shadow: 0 0 0 4px darken(@app-primary, 10%);
		}
	}

	
	// stow the button before the scanner comes up

	&.loading {
		.transition( all 500ms cubic-bezier(0.680, -0.660, 0.265, 1.660) );
		.translateY(125%);
	}

	// gray out the button if disabled

	&[disabled],
	&.disabled {
		background-color: @gray;
		opacity: .2;
		pointer-events: none;
		
		.scan-button-icon {
			box-shadow: 0 0 0 4px @gray;
		}
	}
}

// icon

.scan-button-icon {
	.inline-align();
	.square(@scan-button-icon-size);
	// #gradient .vertical( lighten(@app-primary, 8%), @app-primary, 0%, 50%);
	background-color: lighten(@app-primary, 50%);
	// background-color: black;
	border-radius: 50%;
	// box-shadow: 0 -1px 1px rgba(0, 0, 0, 0.1), inset 0 1px 1px rgba(255, 255, 255, 0.2);
	box-shadow: 0 0 0 4px @app-primary;
	color: @text-color;
	font-size: @ionicons-size-huge;
	left: 50%;
	line-height: @scan-button-icon-size;
	margin-left: -(@scan-button-icon-size / 2);
	margin-top: -(@scan-button-icon-size / 2);
	position: absolute;
	top: 50%;

	> svg {
		.inline-align();
		.square(32px);

		// magic numbers are bad, forget you saw this
		margin-top: -7px;
	}
}

// Labels

.scan-button-labels {
	.square( 100% );
	display: table;
	table-layout: fixed;
}

.scan-button-label {
	background: 0 0;
	border: none;
	display: table-cell;
	padding: 0 @padding-base-horizontal;
	vertical-align: middle;
	text-align: center;
}
.scan-button-label-icon {
	width: @scan-button-icon-size;
}
.scan-button-label-left {
	text-align: right;
}
.scan-button-label-right {
	text-align: left;
}

